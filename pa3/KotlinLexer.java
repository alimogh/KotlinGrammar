// Generated from Kotlin.g4 by ANTLR 4.8
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class KotlinLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.8", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, PACKAGE=12, IMPORT=13, LP_RANGE=14, FUN=15, RETURN=16, 
		NULL=17, VAL=18, VAR=19, IF=20, ELSE=21, FOR=22, STEP=23, WHILE=24, WHEN=25, 
		IN=26, IS=27, ARROW=28, CLASS=29, ABSTRACT=30, INTERFACE=31, OVERRIDE=32, 
		LANGLE=33, RANGLE=34, LPAREN=35, RPAREN=36, LCURL=37, RCURL=38, LSQUARE=39, 
		RSQUARE=40, COLON=41, SingleType=42, MultiType=43, AnyType=44, OP=45, 
		OP_ASSIGNMENT=46, OP_COMPARE=47, NAME=48, INT=49, REAL=50, STRING=51, 
		SingleComment=52, MultiComment=53, WS=54;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "PACKAGE", "IMPORT", "LP_RANGE", "FUN", "RETURN", "NULL", 
			"VAL", "VAR", "IF", "ELSE", "FOR", "STEP", "WHILE", "WHEN", "IN", "IS", 
			"ARROW", "CLASS", "ABSTRACT", "INTERFACE", "OVERRIDE", "LANGLE", "RANGLE", 
			"LPAREN", "RPAREN", "LCURL", "RCURL", "LSQUARE", "RSQUARE", "COLON", 
			"SingleType", "MultiType", "AnyType", "OP_LANGLE", "OP_RANGLE", "OP", 
			"OP_ASSIGNMENT", "OP_COMPARE", "NAME", "INT", "REAL", "STRING", "SingleComment", 
			"MultiComment", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'.'", "'.*'", "','", "'?'", "'='", "'get()'", "'++'", "'--'", 
			"'!'", "'-'", "'downTo'", "'package'", "'import'", null, "'fun'", "'return'", 
			"'null'", "'val'", "'var'", "'if'", "'else'", "'for'", "'step'", "'while'", 
			"'when'", "'in'", "'is'", "'->'", "'class'", "'abstract'", "'interface'", 
			"'override'", "'<'", "'>'", "'('", "')'", "'{'", "'}'", "'['", "']'", 
			"':'", null, null, "'Any'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			"PACKAGE", "IMPORT", "LP_RANGE", "FUN", "RETURN", "NULL", "VAL", "VAR", 
			"IF", "ELSE", "FOR", "STEP", "WHILE", "WHEN", "IN", "IS", "ARROW", "CLASS", 
			"ABSTRACT", "INTERFACE", "OVERRIDE", "LANGLE", "RANGLE", "LPAREN", "RPAREN", 
			"LCURL", "RCURL", "LSQUARE", "RSQUARE", "COLON", "SingleType", "MultiType", 
			"AnyType", "OP", "OP_ASSIGNMENT", "OP_COMPARE", "NAME", "INT", "REAL", 
			"STRING", "SingleComment", "MultiComment", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public KotlinLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Kotlin.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\28\u0240\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\3\2\3\2\3\3\3\3\3\3\3\4"+
		"\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\t\3\t\3\t\3"+
		"\n\3\n\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3"+
		"\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\6\17\u00a6\n\17\r\17\16"+
		"\17\u00a7\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21"+
		"\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\24\3\24\3\24"+
		"\3\24\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\30"+
		"\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32"+
		"\3\32\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\36\3\36\3\36\3\36"+
		"\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3"+
		" \3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%"+
		"\3&\3&\3\'\3\'\3(\3(\3)\3)\3*\3*\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3"+
		"+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3"+
		"+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\5+\u0155\n"+
		"+\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3"+
		",\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3"+
		",\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3"+
		",\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3"+
		",\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\5,\u01c6\n"+
		",\3-\3-\3-\3-\3.\3.\3.\3.\3/\3/\3/\3/\3\60\3\60\3\61\3\61\3\61\3\61\3"+
		"\61\3\61\3\61\3\61\3\61\3\61\5\61\u01e0\n\61\3\62\3\62\3\62\3\62\3\62"+
		"\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\3\62\5\62\u01f0\n\62\3\63\3\63"+
		"\7\63\u01f4\n\63\f\63\16\63\u01f7\13\63\3\64\6\64\u01fa\n\64\r\64\16\64"+
		"\u01fb\3\64\5\64\u01ff\n\64\3\65\6\65\u0202\n\65\r\65\16\65\u0203\3\65"+
		"\3\65\7\65\u0208\n\65\f\65\16\65\u020b\13\65\5\65\u020d\n\65\3\66\3\66"+
		"\7\66\u0211\n\66\f\66\16\66\u0214\13\66\3\66\3\66\3\66\7\66\u0219\n\66"+
		"\f\66\16\66\u021c\13\66\3\66\5\66\u021f\n\66\3\67\3\67\3\67\3\67\7\67"+
		"\u0225\n\67\f\67\16\67\u0228\13\67\3\67\3\67\38\38\38\38\78\u0230\n8\f"+
		"8\168\u0233\138\38\38\38\38\38\39\69\u023b\n9\r9\169\u023c\39\39\3\u0231"+
		"\2:\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35"+
		"\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36"+
		";\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[\2]\2_/a\60c\61e\62g\63i\64k\65m"+
		"\66o\67q8\3\2\13\3\2\60\60\6\2\'\',-//\61\61\6\2&&C\\aac|\7\2&&\62;C\\"+
		"aac|\3\2\62;\3\2))\3\2$$\4\2\f\f\17\17\5\2\13\f\17\17\"\"\2\u026e\2\3"+
		"\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2"+
		"\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31"+
		"\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2"+
		"\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2"+
		"\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2"+
		"\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2"+
		"I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3"+
		"\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2"+
		"\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2"+
		"o\3\2\2\2\2q\3\2\2\2\3s\3\2\2\2\5u\3\2\2\2\7x\3\2\2\2\tz\3\2\2\2\13|\3"+
		"\2\2\2\r~\3\2\2\2\17\u0084\3\2\2\2\21\u0087\3\2\2\2\23\u008a\3\2\2\2\25"+
		"\u008c\3\2\2\2\27\u008e\3\2\2\2\31\u0095\3\2\2\2\33\u009d\3\2\2\2\35\u00a5"+
		"\3\2\2\2\37\u00ac\3\2\2\2!\u00b0\3\2\2\2#\u00b7\3\2\2\2%\u00bc\3\2\2\2"+
		"\'\u00c0\3\2\2\2)\u00c4\3\2\2\2+\u00c7\3\2\2\2-\u00cc\3\2\2\2/\u00d0\3"+
		"\2\2\2\61\u00d5\3\2\2\2\63\u00db\3\2\2\2\65\u00e0\3\2\2\2\67\u00e3\3\2"+
		"\2\29\u00e6\3\2\2\2;\u00e9\3\2\2\2=\u00ef\3\2\2\2?\u00f8\3\2\2\2A\u0102"+
		"\3\2\2\2C\u010b\3\2\2\2E\u010d\3\2\2\2G\u010f\3\2\2\2I\u0111\3\2\2\2K"+
		"\u0113\3\2\2\2M\u0115\3\2\2\2O\u0117\3\2\2\2Q\u0119\3\2\2\2S\u011b\3\2"+
		"\2\2U\u0154\3\2\2\2W\u01c5\3\2\2\2Y\u01c7\3\2\2\2[\u01cb\3\2\2\2]\u01cf"+
		"\3\2\2\2_\u01d3\3\2\2\2a\u01df\3\2\2\2c\u01ef\3\2\2\2e\u01f1\3\2\2\2g"+
		"\u01f9\3\2\2\2i\u0201\3\2\2\2k\u021e\3\2\2\2m\u0220\3\2\2\2o\u022b\3\2"+
		"\2\2q\u023a\3\2\2\2st\7\60\2\2t\4\3\2\2\2uv\7\60\2\2vw\7,\2\2w\6\3\2\2"+
		"\2xy\7.\2\2y\b\3\2\2\2z{\7A\2\2{\n\3\2\2\2|}\7?\2\2}\f\3\2\2\2~\177\7"+
		"i\2\2\177\u0080\7g\2\2\u0080\u0081\7v\2\2\u0081\u0082\7*\2\2\u0082\u0083"+
		"\7+\2\2\u0083\16\3\2\2\2\u0084\u0085\7-\2\2\u0085\u0086\7-\2\2\u0086\20"+
		"\3\2\2\2\u0087\u0088\7/\2\2\u0088\u0089\7/\2\2\u0089\22\3\2\2\2\u008a"+
		"\u008b\7#\2\2\u008b\24\3\2\2\2\u008c\u008d\7/\2\2\u008d\26\3\2\2\2\u008e"+
		"\u008f\7f\2\2\u008f\u0090\7q\2\2\u0090\u0091\7y\2\2\u0091\u0092\7p\2\2"+
		"\u0092\u0093\7V\2\2\u0093\u0094\7q\2\2\u0094\30\3\2\2\2\u0095\u0096\7"+
		"r\2\2\u0096\u0097\7c\2\2\u0097\u0098\7e\2\2\u0098\u0099\7m\2\2\u0099\u009a"+
		"\7c\2\2\u009a\u009b\7i\2\2\u009b\u009c\7g\2\2\u009c\32\3\2\2\2\u009d\u009e"+
		"\7k\2\2\u009e\u009f\7o\2\2\u009f\u00a0\7r\2\2\u00a0\u00a1\7q\2\2\u00a1"+
		"\u00a2\7t\2\2\u00a2\u00a3\7v\2\2\u00a3\34\3\2\2\2\u00a4\u00a6\5g\64\2"+
		"\u00a5\u00a4\3\2\2\2\u00a6\u00a7\3\2\2\2\u00a7\u00a5\3\2\2\2\u00a7\u00a8"+
		"\3\2\2\2\u00a8\u00a9\3\2\2\2\u00a9\u00aa\t\2\2\2\u00aa\u00ab\t\2\2\2\u00ab"+
		"\36\3\2\2\2\u00ac\u00ad\7h\2\2\u00ad\u00ae\7w\2\2\u00ae\u00af\7p\2\2\u00af"+
		" \3\2\2\2\u00b0\u00b1\7t\2\2\u00b1\u00b2\7g\2\2\u00b2\u00b3\7v\2\2\u00b3"+
		"\u00b4\7w\2\2\u00b4\u00b5\7t\2\2\u00b5\u00b6\7p\2\2\u00b6\"\3\2\2\2\u00b7"+
		"\u00b8\7p\2\2\u00b8\u00b9\7w\2\2\u00b9\u00ba\7n\2\2\u00ba\u00bb\7n\2\2"+
		"\u00bb$\3\2\2\2\u00bc\u00bd\7x\2\2\u00bd\u00be\7c\2\2\u00be\u00bf\7n\2"+
		"\2\u00bf&\3\2\2\2\u00c0\u00c1\7x\2\2\u00c1\u00c2\7c\2\2\u00c2\u00c3\7"+
		"t\2\2\u00c3(\3\2\2\2\u00c4\u00c5\7k\2\2\u00c5\u00c6\7h\2\2\u00c6*\3\2"+
		"\2\2\u00c7\u00c8\7g\2\2\u00c8\u00c9\7n\2\2\u00c9\u00ca\7u\2\2\u00ca\u00cb"+
		"\7g\2\2\u00cb,\3\2\2\2\u00cc\u00cd\7h\2\2\u00cd\u00ce\7q\2\2\u00ce\u00cf"+
		"\7t\2\2\u00cf.\3\2\2\2\u00d0\u00d1\7u\2\2\u00d1\u00d2\7v\2\2\u00d2\u00d3"+
		"\7g\2\2\u00d3\u00d4\7r\2\2\u00d4\60\3\2\2\2\u00d5\u00d6\7y\2\2\u00d6\u00d7"+
		"\7j\2\2\u00d7\u00d8\7k\2\2\u00d8\u00d9\7n\2\2\u00d9\u00da\7g\2\2\u00da"+
		"\62\3\2\2\2\u00db\u00dc\7y\2\2\u00dc\u00dd\7j\2\2\u00dd\u00de\7g\2\2\u00de"+
		"\u00df\7p\2\2\u00df\64\3\2\2\2\u00e0\u00e1\7k\2\2\u00e1\u00e2\7p\2\2\u00e2"+
		"\66\3\2\2\2\u00e3\u00e4\7k\2\2\u00e4\u00e5\7u\2\2\u00e58\3\2\2\2\u00e6"+
		"\u00e7\7/\2\2\u00e7\u00e8\7@\2\2\u00e8:\3\2\2\2\u00e9\u00ea\7e\2\2\u00ea"+
		"\u00eb\7n\2\2\u00eb\u00ec\7c\2\2\u00ec\u00ed\7u\2\2\u00ed\u00ee\7u\2\2"+
		"\u00ee<\3\2\2\2\u00ef\u00f0\7c\2\2\u00f0\u00f1\7d\2\2\u00f1\u00f2\7u\2"+
		"\2\u00f2\u00f3\7v\2\2\u00f3\u00f4\7t\2\2\u00f4\u00f5\7c\2\2\u00f5\u00f6"+
		"\7e\2\2\u00f6\u00f7\7v\2\2\u00f7>\3\2\2\2\u00f8\u00f9\7k\2\2\u00f9\u00fa"+
		"\7p\2\2\u00fa\u00fb\7v\2\2\u00fb\u00fc\7g\2\2\u00fc\u00fd\7t\2\2\u00fd"+
		"\u00fe\7h\2\2\u00fe\u00ff\7c\2\2\u00ff\u0100\7e\2\2\u0100\u0101\7g\2\2"+
		"\u0101@\3\2\2\2\u0102\u0103\7q\2\2\u0103\u0104\7x\2\2\u0104\u0105\7g\2"+
		"\2\u0105\u0106\7t\2\2\u0106\u0107\7t\2\2\u0107\u0108\7k\2\2\u0108\u0109"+
		"\7f\2\2\u0109\u010a\7g\2\2\u010aB\3\2\2\2\u010b\u010c\7>\2\2\u010cD\3"+
		"\2\2\2\u010d\u010e\7@\2\2\u010eF\3\2\2\2\u010f\u0110\7*\2\2\u0110H\3\2"+
		"\2\2\u0111\u0112\7+\2\2\u0112J\3\2\2\2\u0113\u0114\7}\2\2\u0114L\3\2\2"+
		"\2\u0115\u0116\7\177\2\2\u0116N\3\2\2\2\u0117\u0118\7]\2\2\u0118P\3\2"+
		"\2\2\u0119\u011a\7_\2\2\u011aR\3\2\2\2\u011b\u011c\7<\2\2\u011cT\3\2\2"+
		"\2\u011d\u011e\7K\2\2\u011e\u011f\7p\2\2\u011f\u0155\7v\2\2\u0120\u0121"+
		"\7U\2\2\u0121\u0122\7j\2\2\u0122\u0123\7q\2\2\u0123\u0124\7t\2\2\u0124"+
		"\u0155\7v\2\2\u0125\u0126\7D\2\2\u0126\u0127\7{\2\2\u0127\u0128\7v\2\2"+
		"\u0128\u0155\7g\2\2\u0129\u012a\7N\2\2\u012a\u012b\7q\2\2\u012b\u012c"+
		"\7p\2\2\u012c\u0155\7i\2\2\u012d\u012e\7H\2\2\u012e\u012f\7n\2\2\u012f"+
		"\u0130\7q\2\2\u0130\u0131\7c\2\2\u0131\u0155\7v\2\2\u0132\u0133\7F\2\2"+
		"\u0133\u0134\7q\2\2\u0134\u0135\7w\2\2\u0135\u0136\7d\2\2\u0136\u0137"+
		"\7n\2\2\u0137\u0155\7g\2\2\u0138\u0139\7E\2\2\u0139\u013a\7j\2\2\u013a"+
		"\u013b\7c\2\2\u013b\u0155\7t\2\2\u013c\u013d\7U\2\2\u013d\u013e\7v\2\2"+
		"\u013e\u013f\7t\2\2\u013f\u0140\7k\2\2\u0140\u0141\7p\2\2\u0141\u0155"+
		"\7i\2\2\u0142\u0143\7D\2\2\u0143\u0144\7q\2\2\u0144\u0145\7q\2\2\u0145"+
		"\u0146\7n\2\2\u0146\u0147\7g\2\2\u0147\u0148\7c\2\2\u0148\u0155\7p\2\2"+
		"\u0149\u014a\7W\2\2\u014a\u014b\7p\2\2\u014b\u014c\7k\2\2\u014c\u0155"+
		"\7v\2\2\u014d\u014e\7P\2\2\u014e\u014f\7q\2\2\u014f\u0150\7v\2\2\u0150"+
		"\u0151\7j\2\2\u0151\u0152\7k\2\2\u0152\u0153\7p\2\2\u0153\u0155\7i\2\2"+
		"\u0154\u011d\3\2\2\2\u0154\u0120\3\2\2\2\u0154\u0125\3\2\2\2\u0154\u0129"+
		"\3\2\2\2\u0154\u012d\3\2\2\2\u0154\u0132\3\2\2\2\u0154\u0138\3\2\2\2\u0154"+
		"\u013c\3\2\2\2\u0154\u0142\3\2\2\2\u0154\u0149\3\2\2\2\u0154\u014d\3\2"+
		"\2\2\u0155V\3\2\2\2\u0156\u0157\7N\2\2\u0157\u0158\7k\2\2\u0158\u0159"+
		"\7u\2\2\u0159\u01c6\7v\2\2\u015a\u015b\7O\2\2\u015b\u015c\7w\2\2\u015c"+
		"\u015d\7v\2\2\u015d\u015e\7c\2\2\u015e\u015f\7d\2\2\u015f\u0160\7n\2\2"+
		"\u0160\u0161\7g\2\2\u0161\u0162\7N\2\2\u0162\u0163\7k\2\2\u0163\u0164"+
		"\7u\2\2\u0164\u01c6\7v\2\2\u0165\u0166\7C\2\2\u0166\u0167\7t\2\2\u0167"+
		"\u0168\7t\2\2\u0168\u0169\7c\2\2\u0169\u016a\7{\2\2\u016a\u016b\7N\2\2"+
		"\u016b\u016c\7k\2\2\u016c\u016d\7u\2\2\u016d\u01c6\7v\2\2\u016e\u016f"+
		"\7O\2\2\u016f\u0170\7c\2\2\u0170\u01c6\7r\2\2\u0171\u0172\7O\2\2\u0172"+
		"\u0173\7w\2\2\u0173\u0174\7v\2\2\u0174\u0175\7c\2\2\u0175\u0176\7d\2\2"+
		"\u0176\u0177\7n\2\2\u0177\u0178\7g\2\2\u0178\u0179\7O\2\2\u0179\u017a"+
		"\7c\2\2\u017a\u01c6\7r\2\2\u017b\u017c\7J\2\2\u017c\u017d\7c\2\2\u017d"+
		"\u017e\7u\2\2\u017e\u017f\7j\2\2\u017f\u0180\7O\2\2\u0180\u0181\7c\2\2"+
		"\u0181\u01c6\7r\2\2\u0182\u0183\7N\2\2\u0183\u0184\7k\2\2\u0184\u0185"+
		"\7p\2\2\u0185\u0186\7m\2\2\u0186\u0187\7g\2\2\u0187\u0188\7f\2\2\u0188"+
		"\u0189\7J\2\2\u0189\u018a\7c\2\2\u018a\u018b\7u\2\2\u018b\u018c\7j\2\2"+
		"\u018c\u018d\7O\2\2\u018d\u018e\7c\2\2\u018e\u01c6\7r\2\2\u018f\u0190"+
		"\7U\2\2\u0190\u0191\7q\2\2\u0191\u0192\7t\2\2\u0192\u0193\7v\2\2\u0193"+
		"\u0194\7g\2\2\u0194\u0195\7f\2\2\u0195\u0196\7O\2\2\u0196\u0197\7c\2\2"+
		"\u0197\u01c6\7r\2\2\u0198\u0199\7U\2\2\u0199\u019a\7g\2\2\u019a\u01c6"+
		"\7v\2\2\u019b\u019c\7O\2\2\u019c\u019d\7w\2\2\u019d\u019e\7v\2\2\u019e"+
		"\u019f\7c\2\2\u019f\u01a0\7d\2\2\u01a0\u01a1\7n\2\2\u01a1\u01a2\7g\2\2"+
		"\u01a2\u01a3\7U\2\2\u01a3\u01a4\7g\2\2\u01a4\u01c6\7v\2\2\u01a5\u01a6"+
		"\7J\2\2\u01a6\u01a7\7c\2\2\u01a7\u01a8\7u\2\2\u01a8\u01a9\7j\2\2\u01a9"+
		"\u01aa\7U\2\2\u01aa\u01ab\7g\2\2\u01ab\u01c6\7v\2\2\u01ac\u01ad\7N\2\2"+
		"\u01ad\u01ae\7k\2\2\u01ae\u01af\7p\2\2\u01af\u01b0\7m\2\2\u01b0\u01b1"+
		"\7g\2\2\u01b1\u01b2\7f\2\2\u01b2\u01b3\7J\2\2\u01b3\u01b4\7c\2\2\u01b4"+
		"\u01b5\7u\2\2\u01b5\u01b6\7j\2\2\u01b6\u01b7\7U\2\2\u01b7\u01b8\7g\2\2"+
		"\u01b8\u01c6\7v\2\2\u01b9\u01ba\7V\2\2\u01ba\u01bb\7t\2\2\u01bb\u01bc"+
		"\7g\2\2\u01bc\u01bd\7g\2\2\u01bd\u01be\7U\2\2\u01be\u01bf\7g\2\2\u01bf"+
		"\u01c6\7v\2\2\u01c0\u01c1\7C\2\2\u01c1\u01c2\7t\2\2\u01c2\u01c3\7t\2\2"+
		"\u01c3\u01c4\7c\2\2\u01c4\u01c6\7{\2\2\u01c5\u0156\3\2\2\2\u01c5\u015a"+
		"\3\2\2\2\u01c5\u0165\3\2\2\2\u01c5\u016e\3\2\2\2\u01c5\u0171\3\2\2\2\u01c5"+
		"\u017b\3\2\2\2\u01c5\u0182\3\2\2\2\u01c5\u018f\3\2\2\2\u01c5\u0198\3\2"+
		"\2\2\u01c5\u019b\3\2\2\2\u01c5\u01a5\3\2\2\2\u01c5\u01ac\3\2\2\2\u01c5"+
		"\u01b9\3\2\2\2\u01c5\u01c0\3\2\2\2\u01c6X\3\2\2\2\u01c7\u01c8\7C\2\2\u01c8"+
		"\u01c9\7p\2\2\u01c9\u01ca\7{\2\2\u01caZ\3\2\2\2\u01cb\u01cc\5C\"\2\u01cc"+
		"\u01cd\3\2\2\2\u01cd\u01ce\b.\2\2\u01ce\\\3\2\2\2\u01cf\u01d0\5E#\2\u01d0"+
		"\u01d1\3\2\2\2\u01d1\u01d2\b/\3\2\u01d2^\3\2\2\2\u01d3\u01d4\t\3\2\2\u01d4"+
		"`\3\2\2\2\u01d5\u01d6\7-\2\2\u01d6\u01e0\7?\2\2\u01d7\u01d8\7/\2\2\u01d8"+
		"\u01e0\7?\2\2\u01d9\u01da\7,\2\2\u01da\u01e0\7?\2\2\u01db\u01dc\7\61\2"+
		"\2\u01dc\u01e0\7?\2\2\u01dd\u01de\7\'\2\2\u01de\u01e0\7?\2\2\u01df\u01d5"+
		"\3\2\2\2\u01df\u01d7\3\2\2\2\u01df\u01d9\3\2\2\2\u01df\u01db\3\2\2\2\u01df"+
		"\u01dd\3\2\2\2\u01e0b\3\2\2\2\u01e1\u01e2\7?\2\2\u01e2\u01f0\7?\2\2\u01e3"+
		"\u01e4\7#\2\2\u01e4\u01f0\7?\2\2\u01e5\u01f0\5[.\2\u01e6\u01f0\5]/\2\u01e7"+
		"\u01e8\7>\2\2\u01e8\u01f0\7?\2\2\u01e9\u01ea\7@\2\2\u01ea\u01f0\7?\2\2"+
		"\u01eb\u01ec\7(\2\2\u01ec\u01f0\7(\2\2\u01ed\u01ee\7~\2\2\u01ee\u01f0"+
		"\7~\2\2\u01ef\u01e1\3\2\2\2\u01ef\u01e3\3\2\2\2\u01ef\u01e5\3\2\2\2\u01ef"+
		"\u01e6\3\2\2\2\u01ef\u01e7\3\2\2\2\u01ef\u01e9\3\2\2\2\u01ef\u01eb\3\2"+
		"\2\2\u01ef\u01ed\3\2\2\2\u01f0d\3\2\2\2\u01f1\u01f5\t\4\2\2\u01f2\u01f4"+
		"\t\5\2\2\u01f3\u01f2\3\2\2\2\u01f4\u01f7\3\2\2\2\u01f5\u01f3\3\2\2\2\u01f5"+
		"\u01f6\3\2\2\2\u01f6f\3\2\2\2\u01f7\u01f5\3\2\2\2\u01f8\u01fa\t\6\2\2"+
		"\u01f9\u01f8\3\2\2\2\u01fa\u01fb\3\2\2\2\u01fb\u01f9\3\2\2\2\u01fb\u01fc"+
		"\3\2\2\2\u01fc\u01fe\3\2\2\2\u01fd\u01ff\7N\2\2\u01fe\u01fd\3\2\2\2\u01fe"+
		"\u01ff\3\2\2\2\u01ffh\3\2\2\2\u0200\u0202\t\6\2\2\u0201\u0200\3\2\2\2"+
		"\u0202\u0203\3\2\2\2\u0203\u0201\3\2\2\2\u0203\u0204\3\2\2\2\u0204\u020c"+
		"\3\2\2\2\u0205\u0209\7\60\2\2\u0206\u0208\t\6\2\2\u0207\u0206\3\2\2\2"+
		"\u0208\u020b\3\2\2\2\u0209\u0207\3\2\2\2\u0209\u020a\3\2\2\2\u020a\u020d"+
		"\3\2\2\2\u020b\u0209\3\2\2\2\u020c\u0205\3\2\2\2\u020c\u020d\3\2\2\2\u020d"+
		"j\3\2\2\2\u020e\u0212\t\7\2\2\u020f\u0211\n\7\2\2\u0210\u020f\3\2\2\2"+
		"\u0211\u0214\3\2\2\2\u0212\u0210\3\2\2\2\u0212\u0213\3\2\2\2\u0213\u0215"+
		"\3\2\2\2\u0214\u0212\3\2\2\2\u0215\u021f\t\7\2\2\u0216\u021a\t\b\2\2\u0217"+
		"\u0219\n\b\2\2\u0218\u0217\3\2\2\2\u0219\u021c\3\2\2\2\u021a\u0218\3\2"+
		"\2\2\u021a\u021b\3\2\2\2\u021b\u021d\3\2\2\2\u021c\u021a\3\2\2\2\u021d"+
		"\u021f\t\b\2\2\u021e\u020e\3\2\2\2\u021e\u0216\3\2\2\2\u021fl\3\2\2\2"+
		"\u0220\u0221\7\61\2\2\u0221\u0222\7\61\2\2\u0222\u0226\3\2\2\2\u0223\u0225"+
		"\n\t\2\2\u0224\u0223\3\2\2\2\u0225\u0228\3\2\2\2\u0226\u0224\3\2\2\2\u0226"+
		"\u0227\3\2\2\2\u0227\u0229\3\2\2\2\u0228\u0226\3\2\2\2\u0229\u022a\b\67"+
		"\4\2\u022an\3\2\2\2\u022b\u022c\7\61\2\2\u022c\u022d\7,\2\2\u022d\u0231"+
		"\3\2\2\2\u022e\u0230\13\2\2\2\u022f\u022e\3\2\2\2\u0230\u0233\3\2\2\2"+
		"\u0231\u0232\3\2\2\2\u0231\u022f\3\2\2\2\u0232\u0234\3\2\2\2\u0233\u0231"+
		"\3\2\2\2\u0234\u0235\7,\2\2\u0235\u0236\7\61\2\2\u0236\u0237\3\2\2\2\u0237"+
		"\u0238\b8\4\2\u0238p\3\2\2\2\u0239\u023b\t\n\2\2\u023a\u0239\3\2\2\2\u023b"+
		"\u023c\3\2\2\2\u023c\u023a\3\2\2\2\u023c\u023d\3\2\2\2\u023d\u023e\3\2"+
		"\2\2\u023e\u023f\b9\4\2\u023fr\3\2\2\2\24\2\u00a7\u0154\u01c5\u01df\u01ef"+
		"\u01f5\u01fb\u01fe\u0203\u0209\u020c\u0212\u021a\u021e\u0226\u0231\u023c"+
		"\5\t#\2\t$\2\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}